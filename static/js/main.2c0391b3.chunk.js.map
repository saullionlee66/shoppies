{"version":3,"sources":["Components/MovieContext.js","Components/Movie.js","Components/Movies.js","Components/SearchBar.js","Components/NominationList.js","App.js","reportWebVitals.js","index.js"],"names":["MovieContext","createContext","MovieProvider","props","useState","movies","setMovies","search","setSearch","reactLocalStorage","getObject","length","count","setCount","nominationList","setNominationList","API","getMovies","a","axios","get","result","data","Search","map","e","useEffect","setObject","console","log","value","updateSearch","target","nominateHandler","movie","name","imdbID","isNominated","removeHandler","filter","removeAllHandler","clear","Provider","children","Movie","useContext","Card","style","width","className","Body","Title","Year","Text","Image","src","Poster","alt","fluid","Button","onClick","disabled","Movies","SearchBar","Form","Control","size","type","onChange","placeholder","Alert","variant","NominationList","ListGroup","Item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c0391b3.chunk.js","sourcesContent":["import React, {useState, useEffect, createContext} from 'react'\nimport {reactLocalStorage} from 'reactjs-localstorage';\nimport axios from 'axios'\n\nexport const MovieContext =createContext();\n\nexport const MovieProvider = (props) =>{\n  const [movies,setMovies] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [count,setCount] = useState(reactLocalStorage.getObject('nominationList').length || 0);\n  const [nominationList, setNominationList] = useState([]);\n  const MY_KEY = 'c7690b39';\n  const API = `http://www.omdbapi.com/?apikey=${MY_KEY}&type=movie&s=${search}`;\n\n  const getMovies = async () => {\n      const result = await axios.get(API);\n      const {data} = result;\n      const {Search} = data;\n      Search && Search.map( e => {\n        return e['isNominated'] = false;\n      })\n      setMovies(Search);\n    }\n\n    const updateSearch = e => {\n      setSearch(e.target.value);\n    }\n    \n    useEffect( () => {\n      getMovies();\n    },[search])\n\n    useEffect( ()=>{\n      reactLocalStorage.setObject('nominationList',nominationList);\n      console.log(reactLocalStorage.getObject('nominationList'));\n    },[nominationList])\n\n    const nominateHandler = (e) =>{\n      movies.map( movie => {\n        if(e.target.name === movie.imdbID){\n          setCount(count+1);\n          movie.isNominated = true;\n          return setNominationList([...nominationList, movie])\n\n        }\n        return movie\n      })\n    }\n\n    const removeHandler = (e) =>{\n      console.log(e.target.name)\n      nominationList.map( movie => {\n        if(e.target.name === movie.imdbID){\n          setCount(count-1);\n          return movie.isNominated = false;\n        }\n      })\n      setNominationList( nominationList.filter( movie=>{\n        return movie.isNominated === true;\n      }))\n    }\n\n    const removeAllHandler = () =>{\n      nominationList.map( movie =>{\n        return movie.isNominated = false;\n      })\n      setCount(0);\n      setNominationList([]);\n      reactLocalStorage.clear();\n    }\n\n\n    const value = {\n      movies,\n      search,\n      count,\n      nominationList,\n      updateSearch,\n      nominateHandler,\n      removeHandler,\n      removeAllHandler\n    }\n\n\n    return (\n        <MovieContext.Provider value={value}>\n            {props.children}\n        </MovieContext.Provider>\n    )\n    \n}\n\n","import React,{useContext} from 'react'\nimport {Button,Card,Image} from 'react-bootstrap'\nimport {MovieContext} from './MovieContext'\nimport '../App.css';\n\nfunction Movie({movie}) {\n    const {count, nominateHandler} = useContext(MovieContext);\n    return (\n        <div>\n            <Card style={{width:'14rem'}} className=\"m-2\">\n                <Card.Body>\n                    <Card.Title>{movie.Title} ({movie.Year})</Card.Title>\n                    <Card.Text>\n                        <Image src={movie.Poster} alt=\"No Photo Provided\" fluid />\n                    </Card.Text>\n                    <Button\n                        name={movie.imdbID} onClick={nominateHandler}\n                        disabled={movie.isNominated || count>=5} >NOMINATE\n                    </Button>    \n                </Card.Body>\n            </Card>\n            \n        </div>\n    )\n}\n\nexport default Movie\n","import React, {useContext} from 'react'\nimport Movie from './Movie'\nimport {MovieContext} from './MovieContext'\nimport '../App.css';\n\n\nfunction Movies() {\n    const {movies} = useContext(MovieContext)\n    console.log(movies)\n\n    return (\n        <div className=\"movieList\">\n            {movies? movies.map( movie => (\n                <Movie key={movie.imdbID} movie={movie}/>\n            )\n            ):null}\n        </div>\n    )\n}\n\nexport default Movies\n","import React, {useContext} from 'react'\nimport {Form,Alert} from 'react-bootstrap'\nimport {MovieContext} from './MovieContext'\nimport '../App.css';\n\nfunction SearchBar() {\n    const {search, updateSearch,count} = useContext(MovieContext)\n    return (\n        <div className=\"\">\n            <h1 className=\"text-primary\">The Shoppies</h1>\n            <h5 className=\"text-light text-left\">Built by Saul Lee</h5>\n            <Form>\n            <Form.Control size=\"lg\" type=\"text\" value={search}\n            onChange={updateSearch}\n            placeholder=\"Search Movies here\" />\n            </Form>\n            {count>=5 && <Alert variant=\"danger\">You can nominate only 5 movies!</Alert> }\n\n        </div>\n    )\n}\n\nexport default SearchBar\n","import React, {useContext} from 'react'\nimport {Button,ListGroup} from 'react-bootstrap'\nimport {MovieContext} from './MovieContext'\nimport '../App.css';\n\nfunction NominationList() {\n    const {removeHandler,count,nominationList,removeAllHandler} = useContext(MovieContext)\n\n    return (\n        <div className=\"nominationList\">\n            <div className=\"mb-2\">\n                {count>0 && (\n                    <div>\n                        <h3 className=\"text-warning\">Nomination List</h3>\n                        <h5 className=\"text-light\">Count:{count}</h5>\n                        <Button variant=\"dark\" onClick={removeAllHandler}>REMOVE ALL</Button>\n                    </div>\n                )}\n                \n\n            </div>\n            {\n                nominationList && nominationList.map( movie => {\n                    if(movie.isNominated === false){\n                        return\n                    }\n                    return (\n                        <ListGroup className=\"mb-2\" key={movie.imdbID}>\n                            <ListGroup.Item variant=\"success\" >{movie.Title} ({movie.Year})</ListGroup.Item>\n                            <Button variant=\"dark\" name={movie.imdbID} onClick={removeHandler}>REMOVE</Button>\n                        </ListGroup>\n                    )\n                    \n                }\n                )  \n            }\n\n        </div>\n    )\n}\n\nexport default NominationList\n","import './App.css';\nimport Movies from './Components/Movies'\nimport SearchBar from './Components/SearchBar'\nimport NominationList from './Components/NominationList'\nimport {MovieProvider} from './Components/MovieContext'\nfunction App() {\n  \n  return (\n    <MovieProvider>\n      <div className=\"App\">\n        <div className=\"bar\">\n          <SearchBar  />\n        </div>\n        <div className=\"components\">\n          <div className=\"movies\">\n            <Movies />\n          </div>\n          <div className=\"nominationList\">\n            <NominationList />\n          </div>\n        </div>\n      </div>\n    </MovieProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}